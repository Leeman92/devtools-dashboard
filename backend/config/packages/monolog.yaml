monolog:
    channels:
        - deprecation # Deprecations are logged in the dedicated "deprecation" channel when it exists
        - docker # Docker service operations
        - github # GitHub API operations
        - auth # Authentication operations
        - metrics # Metrics collection

when@dev:
    monolog:
        handlers:
            main:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug
                channels: ["!event"]
            # uncomment to get logging in your browser
            # you may have to allow bigger header sizes in your Web server configuration
            #firephp:
            #    type: firephp
            #    level: info
            #chromephp:
            #    type: chromephp
            #    level: info
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine", "!console"]

when@test:
    monolog:
        handlers:
            main:
                type: fingers_crossed
                action_level: error
                handler: nested
                excluded_http_codes: [404, 405]
                channels: ["!event"]
            nested:
                type: stream
                path: "%kernel.logs_dir%/%kernel.environment%.log"
                level: debug

when@prod:
    monolog:
        handlers:
            # Main application logs - ALWAYS log errors and above
            main:
                type: stream
                path: php://stderr
                level: error
                formatter: monolog.formatter.json
                channels: ["!event", "!doctrine", "!deprecation", "!docker", "!github", "!auth", "!metrics"]
            
            # Info level logs for general application flow
            info:
                type: stream
                path: php://stderr
                level: "%env(default:info:LOG_LEVEL)%"
                formatter: monolog.formatter.json
                channels: ["!event", "!doctrine", "!deprecation", "!docker", "!github", "!auth", "!metrics"]
            
            # Docker service logs
            docker:
                type: stream
                path: php://stderr
                level: info
                formatter: monolog.formatter.json
                channels: [docker]
            
            # GitHub API logs
            github:
                type: stream
                path: php://stderr
                level: info
                formatter: monolog.formatter.json
                channels: [github]
            
            # Authentication logs - ALWAYS log warnings and above
            auth:
                type: stream
                path: php://stderr
                level: warning
                formatter: monolog.formatter.json
                channels: [auth]
            
            # Authentication info logs
            auth_info:
                type: stream
                path: php://stderr
                level: info
                formatter: monolog.formatter.json
                channels: [auth]
            
            # Metrics collection logs
            metrics:
                type: stream
                path: php://stderr
                level: info
                formatter: monolog.formatter.json
                channels: [metrics]
            
            # Critical error handler - captures ALL errors with full context
            critical_errors:
                type: stream
                path: php://stderr
                level: error
                formatter: monolog.formatter.json
                bubble: false
            
            # Console output for commands
            console:
                type: console
                process_psr_3_messages: false
                channels: ["!event", "!doctrine"]
            
            # Deprecation warnings
            deprecation:
                type: stream
                channels: [deprecation]
                path: php://stderr
                level: notice
                formatter: monolog.formatter.json
