name: Deploy with Optimized Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  HARBOR_REGISTRY: harbor.patricklehmann.dev
  HARBOR_USERNAME: ${{ secrets.HARBOR_USERNAME }}
  HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}

jobs:
  check-dependencies:
    runs-on: ubuntu-latest
    outputs:
      deps-changed: ${{ steps.check-deps.outputs.deps-changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need previous commit to compare

      - name: Check if dependencies changed
        id: check-deps
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E "(composer\.(json|lock)|symfony\.lock)" > /dev/null; then
            echo "deps-changed=true" >> $GITHUB_OUTPUT
            echo "üì¶ Dependencies have changed!"
          else
            echo "deps-changed=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No dependency changes detected"
          fi

  build-deps-image:
    needs: check-dependencies
    if: needs.check-dependencies.outputs.deps-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Harbor Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ env.HARBOR_USERNAME }}
          password: ${{ env.HARBOR_PASSWORD }}

      - name: Build and push dependencies base image
        run: |
          echo "üîß Building backend dependencies base image..."
          docker build \
            -f backend/.docker/Dockerfile.deps \
            -t ${{ env.HARBOR_REGISTRY }}/dashboard/backend-deps:latest \
            -t ${{ env.HARBOR_REGISTRY }}/dashboard/backend-deps:$(date +%Y%m%d-%H%M%S) \
            backend/
          
          echo "üì§ Pushing dependencies image to Harbor..."
          docker push ${{ env.HARBOR_REGISTRY }}/dashboard/backend-deps:latest
          docker push ${{ env.HARBOR_REGISTRY }}/dashboard/backend-deps:$(date +%Y%m%d-%H%M%S)

  build-and-deploy:
    needs: [check-dependencies, build-deps-image]
    if: always() && (needs.build-deps-image.result == 'success' || needs.build-deps-image.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Harbor Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.HARBOR_REGISTRY }}
          username: ${{ env.HARBOR_USERNAME }}
          password: ${{ env.HARBOR_PASSWORD }}

      - name: Ensure dependencies base image exists
        run: |
          if ! docker pull ${{ env.HARBOR_REGISTRY }}/dashboard/backend-deps:latest; then
            echo "‚ö†Ô∏è Base image not found. Building initial version..."
            docker build \
              -f backend/.docker/Dockerfile.deps \
              -t ${{ env.HARBOR_REGISTRY }}/dashboard/backend-deps:latest \
              backend/
            docker push ${{ env.HARBOR_REGISTRY }}/dashboard/backend-deps:latest
          fi

      - name: Build optimized backend image
        run: |
          echo "üöÄ Building optimized backend image..."
          docker build \
            -f backend/.docker/Dockerfile.optimized \
            -t ${{ env.HARBOR_REGISTRY }}/dashboard/backend:latest \
            --target production \
            backend/

      - name: Build frontend image
        run: |
          echo "üé® Building frontend image..."
          docker build \
            -f frontend/.docker/Dockerfile \
            -t ${{ env.HARBOR_REGISTRY }}/dashboard/frontend:latest \
            --target production \
            frontend/

      - name: Push images to Harbor
        run: |
          echo "üì§ Pushing images to Harbor..."
          docker push ${{ env.HARBOR_REGISTRY }}/dashboard/backend:latest
          docker push ${{ env.HARBOR_REGISTRY }}/dashboard/frontend:latest

      - name: Deploy to Docker Swarm
        run: |
          echo "üöÄ Deploying to production..."
          # Add your deployment logic here
          # docker stack deploy -c docker-stack.yml dashboard 