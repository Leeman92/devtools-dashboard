name: Deploy My Dashboard

on:
  push:
    branches: [main]

env:
  VAULT_VERSION: "1.19.4"
  VAULT_SHA256: "d8621f31427ecb6712923fc2db207b3b3c04711b722b11f34627cd4cf837a9c6"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image: harbor.patricklehmann.dev/dashboard/dashboard:latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Prepare cache directory
        run: |
          mkdir -p /tmp/.buildx-cache
      
      - name: Install Vault CLI
        run: ./scripts/deployment/install-vault.sh
        env:
          VAULT_VERSION: ${{ env.VAULT_VERSION }}
          VAULT_SHA256: ${{ env.VAULT_SHA256 }}

      - name: Authenticate with Vault
        run: ./scripts/deployment/setup-vault-auth.sh
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}

      - name: Fetch build secrets from Vault
        run: ./scripts/deployment/fetch-build-secrets.sh
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}

      - name: Log in to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.patricklehmann.dev
          username: ${{ env.HARBOR_USERNAME }}
          password: ${{ env.HARBOR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/.docker/Dockerfile
          target: production
          push: true
          tags: harbor.patricklehmann.dev/dashboard/dashboard:latest
          build-args: |
            DOCKER_GID=986
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          if [ -d /tmp/.buildx-cache-new ]; then
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
          fi

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Vault CLI
        run: ./scripts/deployment/install-vault.sh
        env:
          VAULT_VERSION: ${{ env.VAULT_VERSION }}
          VAULT_SHA256: ${{ env.VAULT_SHA256 }}

      - name: Authenticate with Vault
        run: ./scripts/deployment/setup-vault-auth.sh
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}

      - name: Fetch deployment secrets from Vault
        run: ./scripts/deployment/fetch-deploy-secrets.sh
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}

      - name: Generate environment file from Vault
        run: ./scripts/deployment/generate-env-file.sh
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SERVER_IP }}
          username: patrick
          port: ${{ env.SERVER_PORT }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          source: "docker-stack.yml,.env.production,scripts/deployment/deploy-to-server.sh"
          target: "/home/patrick/dashboard"
          strip_components: 0

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SERVER_IP }}
          username: patrick
          port: ${{ env.SERVER_PORT }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          command_timeout: 5m
          script: |
            chmod +x /home/patrick/dashboard/scripts/deployment/deploy-to-server.sh
            /home/patrick/dashboard/scripts/deployment/deploy-to-server.sh
