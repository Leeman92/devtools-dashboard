# Nginx configuration for dashboard.patricklehmann.dev
# Reverse proxy to Docker Swarm frontend service
# SSL will be configured automatically by certbot

# Upstream configuration for load balancing
upstream dashboard_frontend {
    # Docker Swarm frontend service on port 3001
    server 127.0.0.1:3001;
    
    # Health check settings
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# HTTP server block (certbot will add HTTPS configuration)
server {
    listen 80;
    listen [::]:80;
    server_name dashboard.patricklehmann.dev;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/dashboard.patricklehmann.dev.access.log;
    error_log /var/log/nginx/dashboard.patricklehmann.dev.error.log;

    # Client settings
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Proxy settings
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    # Main location block - proxy to frontend service (React app + API proxy)
    location / {
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Proxy to frontend upstream (includes React app + /api/* proxy to backend)
        proxy_pass http://dashboard_frontend;
        
        # Handle redirects properly
        proxy_redirect off;
        
        # WebSocket support (if needed for future features)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Health check endpoint
    location /health {
        proxy_pass http://dashboard_frontend/health;
        proxy_set_header Host $host;
        access_log off;
    }

    # Security: Block direct API access (API is only accessible via frontend proxy)
    location /api/ {
        # This ensures API is only accessible through the frontend nginx proxy
        # which handles authentication and routing internally
        proxy_pass http://dashboard_frontend/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Security: Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|log|sql|sqlite)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Favicon and robots.txt handled by frontend
    location = /favicon.ico {
        proxy_pass http://dashboard_frontend/favicon.ico;
        access_log off;
        log_not_found off;
    }

    location = /robots.txt {
        proxy_pass http://dashboard_frontend/robots.txt;
        access_log off;
        log_not_found off;
    }
} 